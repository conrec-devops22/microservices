name: Deploy to Minikube
on:
  push:
    branches:
      - 07-testing-steps
jobs:
  test:
    runs-on: ubuntu-latest
    name: Test
    steps:
    - name: Test
      run: |
        RESPONSE=$(curl https://api.github.com/repos/conrec-devops22/microservices-testing/actions/runs)
        STATUS=$(echo $RESPONSE | jq -r '.workflow_runs[0].conclusion')
        echo $STATUS
        if [ "$STATUS" = "failure" ]; then
          exit 1
        fi
  build:
    runs-on: ubuntu-latest
    name: Build
    needs: test
    steps:
    - uses: actions/checkout@v2
    - name: Start minikube
      uses: medyagh/setup-minikube@master
      id: minikube
      with:
        driver: docker
        wait: all
    - name: Try the cluster
      run: kubectl get pods -A
    - name: Setup Docker environment
      run: |
        export SHELL=/bin/bash
        eval $(minikube -p minikube docker-env)
    - name: Print current app version
      run: |
        echo "current_version=$(grep '# version' version.md | cut -d ' ' -f3)" >> $GITHUB_ENV
        echo "Current version: ${{ env.current_version }}"
    - name: Generate Modified Deployment YAML
      run: |
        sed -e "s/microservice1:1.0.0/microservice1:${{ env.current_version }}/g" deployment-service1.yaml > modified-deployment-service1.yaml
        sed -e "s/microservice2:1.0.0/microservice1:${{ env.current_version }}/g" deployment-service2.yaml > modified-deployment-service2.yaml
    - name: Build microservice1 image
      run: |
        eval $(minikube -p minikube docker-env)
        docker build -f ./service1/Dockerfile -t microservice1:${{ env.current_version }} ./service1
    - name: Build microservice2 image
      run: |
        eval $(minikube -p minikube docker-env)
        docker build -f ./service2/Dockerfile -t microservice2:${{ env.current_version }} ./service2
    - name: Print docker images
      run: |
        eval $(minikube -p minikube docker-env)
        docker images
  qaDeploy:
    name: Deploy to QA
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to minikube
      run: |
        eval $(minikube -p minikube docker-env)
        kubectl apply -f modified-deployment-service1.yaml
        kubectl apply -f modified-deployment-service2.yaml
        kubectl apply -f service-service1.yaml
        kubectl apply -f service-service2.yaml
    - name: List deployments
      run: kubectl get deploy
    - name: List services
      run: kubectl get service
    - name: List pods
      run: kubectl get pods
    - name: Wait for pods to be ready
      run: |
        chmod +x ./check_pods.sh
        ./check_pods.sh
      timeout-minutes: 15
    - name: Test service URLs
      run: |
        eval $(minikube -p minikube docker-env)
        sleep 30
        minikube service list
        echo "------------------service details------------------"
        kubectl get service service2-service
        echo "------------------opening the service------------------"
        echo
        curl $(minikube service service2-service --url)/
  prodDeploy:
    name: Deploy to PROD
    runs-on: ubuntu-latest
    needs: qaDeploy
    steps:
    - uses: trstringer/manual-approval@v1
      with:
        secret: ${{ github.TOKEN }}
        approvers: jonconinf
    - name: Deploy to minikube
      run: |
        eval $(minikube -p minikube docker-env)
        kubectl apply -f modified-deployment-service1.yaml
        kubectl apply -f modified-deployment-service2.yaml
        kubectl apply -f service-service1.yaml
        kubectl apply -f service-service2.yaml
    - name: List deployments
      run: kubectl get deploy
    - name: List services
      run: kubectl get service
    - name: List pods
      run: kubectl get pods
    - name: Wait for pods to be ready
      run: |
        chmod +x ./check_pods.sh
        ./check_pods.sh
      timeout-minutes: 15
    - name: Test service URLs
      run: |
        eval $(minikube -p minikube docker-env)
        sleep 30
        minikube service list
        echo "------------------service details------------------"
        kubectl get service service2-service
        echo "------------------opening the service------------------"
        echo
        curl $(minikube service service2-service --url)/
